{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/assets/main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\n// variables\nvar\n    $isAnimatedSecond = $('.second .is-animated'),\n    $isAnimatedThird = $('.third .is-animated'),\n    // $isAnimatedFourth = $('.fourth .is-animated'),\n    $isAnimatedFifth = $('.fifth .is-animated');\n    $isAnimatedSixth = $('.sixth .is-animated');\n    $isAnimatedTestimonials = $('.testimonial-block .is-animated');\n\n$('#fullpage').fullpage({\n    licenseKey: 'xxxxxxxx-xxxxxxxx-xxxxxxxx-xxxxxxxx',\n    verticalCentered: true,\n    lockAnchors: true,\n    anchors: ['main', 'whatWeDo', 'success', 'testimonials', 'expertise', 'footer'],\n    navigation: true,\n    navigationTooltips: ['MasterDynamix',  'What we do', 'Your success', 'Testimonials', 'Our expertise', 'Reach us'],\n    showActiveTooltip: false,\n    menu: '#menu',\n    // sectionsColor: ['#fff',  '#fff', '#fff', '#fff', '#fff'],\n    scrollOverflow: true,\n    css3: false,\n    afterRender: function(){\n\n        particlesJS.load('particles-js', 'assets/particles.json', function() {\n            console.log('callback - particles.js config loaded');\n        });\n        \n        //slick\n        $('.testimonial').slick({\n            speed: 300,\n            autoplay: true,\n            prevArrow: '<span class=\"slick-prev\"><i class=\"fas fa-chevron-left fa-2x\"></i></span>',\n            nextArrow: '<span class=\"slick-next\"><i class=\"fas fa-chevron-right fa-2x\"></i></span>',\n            autoplaySpeed: 10100,\n            slidesToShow: 1,\n            pauseOnHover: false,\n            slidesToScroll: 1,\n            arrows: true,\n            fade: true,\n            responsive: [\n                {\n                  breakpoint: 767,\n                  settings: {\n                    arrows: false\n                  }\n                }\n            ]\n        });\n        $(\".testimonial\").slick(\"pause\");\n        $('.slider-nav').on('click', '.slide-link', function (e) {\n            e.preventDefault();\n            $('.testimonial').slick('slickGoTo', $(this).attr('data-slide'));\n        });\n        \n        $('.testimonial').on('beforeChange', function(event, slick, currentSlide, nextSlide){\n            $(\".slide-link\").each(function() {\n                if ($(this).attr('data-slide') == nextSlide) {\n                    $(this).addClass(\"active\");\n                } else {\n                    $(this).removeClass(\"active\");\n                }\n            });\n        });\n    },\n    afterLoad: function(origin, destination){\n        //using destination\n        console.log(destination.anchor);\n        if(destination.anchor == 'footer'){\n            $('*[data-open=\"popup-trigger\"]').addClass('not-active')\n\n        } else {\n            $('*[data-open=\"popup-trigger\"]').removeClass('not-active')\n        }\n\n        if(destination.anchor == 'testimonials'){\n\t\t\t$(\".testimonial\").slick(\"play\");\n\t\t}\n    },\n    onLeave: function(origin, nextIndex) {\n        console.log(origin.index, nextIndex.index)\n        // first animation\n        if( origin.index == 0 && nextIndex.index == 1 ) {\n            $isAnimatedSecond.addClass('animated');\n            $isAnimatedSecond.eq(0).addClass('animated fadeIn').css('animation-delay', '0.2s');\n            $isAnimatedSecond.eq(1).addClass('animated fadeIn').css('animation-delay', '0.4s');\n            $isAnimatedSecond.eq(2).addClass('animated fadeIn').css('animation-delay', '0.8s');\n        }\n\n        else if( (origin.index == 0 || origin.index == 1 ) && nextIndex.index == 2 ) {\n            $isAnimatedThird.addClass('animated');\n            $isAnimatedThird.eq(0).addClass('fadeInLeftBig').css('animation-delay', '.2s');\n            $isAnimatedThird.eq(1).addClass('fadeInUpBig').css('animation-delay', '.4s');\n            // $isAnimatedSecondSingle.addClass('animated rollIn').css('animation-delay', '1.7s');\n        }\n\n        else if( ( origin.index == 0 || origin.index == 1 || origin.index == 2 ) && nextIndex.index == 3 ) {\n            $isAnimatedTestimonials.eq(0).addClass('animated fadeInDownBig').css('animation-delay', '0.05s');\n            $isAnimatedTestimonials.eq(1).addClass('animated fadeIn').css('animation-delay', '0.6s');\n        }\n\n        else if( ( origin.index == 0 || origin.index == 1 || origin.index == 2 || origin.index == 3 ) && nextIndex.index == 4 ) {\n            $isAnimatedFifth.eq(0).addClass('animated zoomIn').css('animation-delay', '.1s');\n            $isAnimatedFifth.eq(1).addClass('animated zoomIn').css('animation-delay', '.5s');\n        }\n\n        else if( ( origin.index == 0 || origin.index == 1 || origin.index == 2 || origin.index == 3 || origin.index == 4 ) && nextIndex.index == 5 ) {\n            $isAnimatedSixth.eq(0).addClass('animated zoomIn').css('animation-delay', '.3s');\n        }\n    }\n});\n\n$('#arrowAnim').click(function(){\n    $.fn.fullpage.moveSectionDown();\n});\n\n$(document).ready(function() {\n    $('body').fadeTo( \"fast\", 1 );\n    if(!window.location.href.indexOf(\"team\")) {\n        if($('body').hasClass(\"tingle-enabled\")){\n            fullpage_api.setAllowScrolling(false);\n        } else {\n            fullpage_api.setAllowScrolling(true);\n        }\n    }\n});\n\nif (window.location.href.indexOf(\"partners\") > -1) {\n    $('#fullpage-projects').fullpage({\n        licenseKey: 'xxxxxxxx-xxxxxxxx-xxxxxxxx-xxxxxxxx',\n        verticalCentered: true,\n        lockAnchors: true,\n        anchors: ['Jeeffy', 'AgentRiskView', 'FreeHomeRisk', 'HazardHub', 'KeyNein', 'UnderNDA', 'TrueReviewCasino'],\n        navigation: true,\n        navigationTooltips: ['Jeeffy', 'AgentRiskView', 'FreeHomeRisk', 'HazardHub', 'KeyNein', 'UnderNDA', 'TrueReviewCasino'],\n        showActiveTooltip: false,\n        menu: '#menu',\n        sectionsColor: ['#fff', '#f7f7f7', '#fff', '#f7f7f7', '#fff', '#f7f7f7', '#fff', '#f7f7f7'],\n        //disabled in mobile\n        responsiveWidth: 767,\n        responsiveHeight: 380,\n        afterResponsive: function(isResponsive){},\n        afterRender: function(){\n            var myModalContent = new tingle.modal({\n                onOpen: function() {\n                    fullpage_api.setAllowScrolling(false);\n                },\n                onClose: function() {\n                    fullpage_api.setAllowScrolling(true);\n                }\n            });\n            var myBtn = document.querySelectorAll(\".js-tingle-modal\");\n            function myHandler() {\n                myModalContent.open();\n                if (this.hasAttribute(\"data-btn\")) {\n                    myModalContent.setContent(document.querySelector(\".project\" + this.getAttribute(\"data-btn\") + \"-modal\").innerHTML);\n                } else {\n                    myModalContent.setContent(document.querySelector(\".project1-modal\").innerHTML);\n                }\n            }\n            for (var i = 0; i < myBtn.length; i++) {\n                myBtn[i].addEventListener(\"click\", myHandler);\n            }\n            \n        }\n    });\n}\n\n\nfunction validEmail(email) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return re.test(email);\n}\n\nfunction validateHuman(honeypot) {\n    if (honeypot) {  //if hidden form filled up\n        console.log(\"Robot Detected!\");\n        return true;\n    } else {\n        console.log(\"Welcome Human!\");\n    }\n}\n\n// get all data in form and return object\nfunction getFormData() {\n    var form = document.getElementById(\"gform\");\n    var elements = form.elements; // all form elements\n    var fields = Object.keys(elements).filter(function(k) {\n        // the filtering logic is simple, only keep fields that are not the honeypot\n        return (elements[k].name !== \"honeypot\");\n    }).map(function(k) {\n        if(elements[k].name !== undefined) {\n            return elements[k].name;\n            // special case for Edge's html collection\n        }else if(elements[k].length > 0){\n            return elements[k].item(0).name;\n        }\n    }).filter(function(item, pos, self) {\n        return self.indexOf(item) == pos && item;\n    });\n    var data = {};\n    fields.forEach(function(k){\n        data[k] = elements[k].value;\n        var str = \"\"; // declare empty string outside of loop to allow\n                      // it to be appended to for each item in the loop\n        if(elements[k].type === \"checkbox\"){ // special case for Edge's html collection\n            str = str + elements[k].checked + \", \"; // take the string and append\n                                                    // the current checked value to\n                                                    // the end of it, along with\n                                                    // a comma and a space\n            data[k] = str.slice(0, -2); // remove the last comma and space\n                                        // from the  string to make the output\n                                        // prettier in the spreadsheet\n        }else if(elements[k].length){\n            for(var i = 0; i < elements[k].length; i++){\n                if(elements[k].item(i).checked){\n                    str = str + elements[k].item(i).value + \", \"; // same as above\n                    data[k] = str.slice(0, -2);\n                }\n            }\n        }\n    });\n\n    // add form-specific values into the data\n    data.formDataNameOrder = JSON.stringify(fields);\n    data.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n    data.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\n\n    console.log(data);\n    return data;\n}\n\nfunction handleFormSubmit(event) {  // handles form submit withtout any jquery\n    event.preventDefault();           // we are submitting via xhr below\n    var data = getFormData();         // get the values submitted in the form\n\n    /* OPTION: Remove this comment to enable SPAM prevention, see README.md\n     if (validateHuman(data.honeypot)) {  //if form is filled, form will not be submitted\n     return false;\n     }\n     */\n\n    if( data.email && !validEmail(data.email) ) {   // if email is not valid show error\n        var invalidEmail = document.getElementById(\"email-invalid\");\n        if (invalidEmail) {\n            invalidEmail.style.display = \"block\";\n            return false;\n        }\n    } else {\n        var url = event.target.action;  //\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', url);\n        // xhr.withCredentials = true;\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        xhr.onreadystatechange = function() {\n            console.log( xhr.status, xhr.statusText )\n            console.log(xhr.responseText);\n            document.getElementById(\"gform\").style.display = \"none\"; // hide form\n            var thankYouMessage = document.getElementById(\"thankyou_message\");\n            if (thankYouMessage) {\n                thankYouMessage.style.display = \"block\";\n            }\n            return;\n        };\n        // url encode form data for sending as post data\n        var encoded = Object.keys(data).map(function(k) {\n            return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k])\n        }).join('&')\n        xhr.send(encoded);\n    }\n}\nfunction loaded() {\n    console.log(\"Contact form submission handler loaded successfully.\");\n    // bind to the submit event of our form\n    var form = document.getElementById(\"gform\");\n    form.addEventListener(\"submit\", handleFormSubmit, false);\n};\ndocument.addEventListener(\"DOMContentLoaded\", loaded, false);\n\n\n\nif (window.location.href.indexOf(\"index\") > -1 || location.pathname == \"/\") {\n    // get all data in form and return object\n    function getFormData2() {\n        var form = document.getElementById(\"gform2\");\n        var elements = form.elements; // all form elements\n        var fields = Object.keys(elements).map(function(k) {\n            if(elements[k].name !== undefined) {\n                return elements[k].name;\n                // special case for Edge's html collection\n            }else if(elements[k].length > 0){\n                return elements[k].item(0).name;\n            }\n        }).filter(function(item, pos, self) {\n            return self.indexOf(item) == pos && item;\n        });\n        var data = {};\n        fields.forEach(function(k){\n            data[k] = elements[k].value;\n            var str = \"\"; // declare empty string outside of loop to allow\n                        // it to be appended to for each item in the loop\n            if(elements[k].type === \"checkbox\"){ // special case for Edge's html collection\n                str = str + elements[k].checked + \", \"; // take the string and append\n                                                        // the current checked value to\n                                                        // the end of it, along with\n                                                        // a comma and a space\n                data[k] = str.slice(0, -2); // remove the last comma and space\n                                            // from the  string to make the output\n                                            // prettier in the spreadsheet\n            }else if(elements[k].length){\n                for(var i = 0; i < elements[k].length; i++){\n                    if(elements[k].item(i).checked){\n                        str = str + elements[k].item(i).value + \", \"; // same as above\n                        data[k] = str.slice(0, -2);\n                    }\n                }\n            }\n        });\n\n        // add form-specific values into the data\n        data.formDataNameOrder = JSON.stringify(fields);\n        data.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n        data.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\n\n        console.log(data);\n        return data;\n    }\n\n    function handleFormSubmit2(event) {  // handles form submit withtout any jquery\n        event.preventDefault();           // we are submitting via xhr below\n        var data = getFormData2();         // get the values submitted in the form\n\n        /* OPTION: Remove this comment to enable SPAM prevention, see README.md\n        if (validateHuman(data.honeypot)) {  //if form is filled, form will not be submitted\n        return false;\n        }\n        */\n\n        if( !validEmail(data.email) ) {   // if email is not valid show error\n            document.getElementById('email-invalid2').style.display = 'block';\n            return false;\n        } else {\n            var url = event.target.action;  //\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', url);\n            // xhr.withCredentials = true;\n            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n            xhr.onreadystatechange = function() {\n                console.log( xhr.status, xhr.statusText )\n                console.log(xhr.responseText);\n                document.getElementById('gform2').style.display = 'none'; // hide form\n                document.getElementById('thankyou_message2').style.display = 'block';\n                return;\n            };\n            // url encode form data for sending as post data\n            var encoded = Object.keys(data).map(function(k) {\n                return encodeURIComponent(k) + '=' + encodeURIComponent(data[k])\n            }).join('&')\n            xhr.send(encoded);\n        }\n    }\n    function loaded2() {\n        console.log('Bottom contact form submission handler loaded successfully');\n        // bind to the submit event of our form\n        var form = document.getElementById('gform2');\n        form.addEventListener(\"submit\", handleFormSubmit2, false);\n    };\n    document.addEventListener('DOMContentLoaded', loaded2, false);\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}